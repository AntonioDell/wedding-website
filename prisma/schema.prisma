// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("NUXT_DATABASE_URL")
}

enum AccommodationType {
  TWIN_BED
  SINGLE_BED
  NO_BED
}

model Admin {
  code String @id
}

model Wedding {
  id                  Int      @id @default(autoincrement())
  husbandToBe         String
  wifeToBe            String
  date                DateTime @default(now())
  civil_marriage_date DateTime @default(now())
}

// New models:
model Guest {
  guest_id                         Int            @id @default(autoincrement())
  type                             GuestType      @default(SINGLE)
  is_coming                        Choice         @default(UNDETERMINED)
  is_invited_to_civil_marriage_day Boolean        @default(false)
  is_coming_to_civil_marriage_day  Choice         @default(UNDETERMINED)
  note                             String         @default("")
  // Relationships
  single                           Single?
  couple                           Couple?
  family                           Family?
  invitation                       Invitation?
  accommodation                    Accommodation?
}

enum GuestType {
  SINGLE
  COUPLE
  FAMILY
}

model Single {
  single_id     Int     @id
  name          String
  plus_one      Choice  @default(UNDETERMINED)
  plus_one_name String?

  // Relationships
  guest Guest @relation(fields: [single_id], references: [guest_id], onDelete: Cascade)
}

model Couple {
  couple_id     Int    @id
  partner1_name String
  partner2_name String

  // Relationships
  guest Guest @relation(fields: [couple_id], references: [guest_id], onDelete: Cascade)
}

model Family {
  family_id Int    @id
  name      String

  // Relationships
  guest          Guest          @relation(fields: [family_id], references: [guest_id], onDelete: Cascade)
  family_members FamilyMember[]
}

model FamilyMember {
  member_id         Int    @id @default(autoincrement())
  family_id         Int
  name              String
  is_child_under_14 Choice @default(UNDETERMINED)

  // Relationships
  family Family @relation(fields: [family_id], references: [family_id], onDelete: Cascade)
}

model Invitation {
  invitation_id Int    @id @default(autoincrement())
  guest_id      Int    @unique
  code          String @unique

  // Relationships
  guest Guest @relation(fields: [guest_id], references: [guest_id], onDelete: Cascade)
}

model Accommodation {
  accommodation_id Int               @id @default(autoincrement())
  guest_id         Int               @unique
  is_provided      Boolean           @default(false)
  type             AccommodationType @default(NO_BED)
  nights_included  Int               @default(0) @db.SmallInt
  is_accepted      Choice            @default(UNDETERMINED)
  hotel            Hotel             @default(PENSION)

  // Relationships
  guest Guest @relation(fields: [guest_id], references: [guest_id], onDelete: Cascade)
}

enum Hotel {
  PENSION
  APARTHOTEL
}

enum Choice {
  UNDETERMINED
  YES
  NO
}
